type Cliente { 
    id: ID
    nombre: String
    apellido: String
    empresa: String
    emails: [Email]
    edad: Int
    tipo: TipoCliente
    pedidos: [Pedido]
  }
  type Email {
    email: String
  }
  type Pedido {
    producto: String
    precio: Int
  }
  """ Asigna la categor√≠a del cliente """
  enum TipoCliente {
    BASICO
    PREMIUM
  }
  type Query {
    getCliente(id: ID) : Cliente
    getClientes(limite: Int) : [Cliente]
    
  }
  input PedidoInput {
    producto: String
    precio: Int
  }
  input EmailInput{
    email: String
  }
  """ Campos para los clientes nuevos """
  input ClienteInput {
    id: ID
    nombre: String!
    apellido: String!
    empresa: String!
    emails: [EmailInput]
    edad: Int!
    tipo: TipoCliente!
    pedidos: [PedidoInput]
  }
  """ Mutation para crear nuevos clientes"""
  type Mutation {
    #Nombre del resolve, imput con datos y valor que retorna
    """ Te permite crear nuevos clientes """
    crearCliente(input: ClienteInput) : Cliente
    actualizarCliente(input: ClienteInput) : Cliente
    eliminarCliente(id: ID!) : String
  }